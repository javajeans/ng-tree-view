!function e(t,n,i){function o(l,d){if(!n[l]){if(!t[l]){var c="function"==typeof require&&require;if(!d&&c)return c(l,!0);if(r)return r(l,!0);var u=new Error("Cannot find module '"+l+"'");throw u.code="MODULE_NOT_FOUND",u}var a=n[l]={exports:{}};t[l][0].call(a.exports,function(e){var n=t[l][1][e];return o(n?n:e)},a,a.exports,e,t,n,i)}return n[l].exports}for(var r="function"==typeof require&&require,l=0;l<i.length;l++)o(i[l]);return o}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n["default"]=["$compile",function(e){"ngInject";return{restrict:"A",replace:!0,link:function(t,n,i){t.$watch(i.compiled,function(i){n.html(i),e(n.contents())(t)})}}}]},{}],2:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}var o=e("./ngtree.directive"),r=i(o),l=e("./directive.compiled"),d=i(l),c=e("./ngtree.controller"),u=i(c);angular.module("tolgaakyuz.ngtree",[]).controller("NgTreeController",u["default"]).directive("ngTree",r["default"]).directive("compiled",d["default"])},{"./directive.compiled":1,"./ngtree.controller":3,"./ngtree.directive":4}],3:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(n,"__esModule",{value:!0});var o=e("./templates"),r=i(o);n["default"]=["$scope","$q",function(e,t){"ngInject";e.templates=r["default"],e._initItem=function(e){return e._ngTree={folded:!0,selected:!1},angular.isArray(e.children||[])||(e.children=[]),e},e._initItems=function(t){return t.map(function(t){return e._initItem(t)})},e.tree=e._initItems(e._options.data),e.options={id:e._options.id||0,lazy:e._options.lazy||!1,indicators:angular.extend({folded:"[+]",unfolded:"[-]",loading:"[...]"},e._options.indicators||{})},e._lastSelectedItem=null,e.shouldLoad=e._options.shouldLoad||function(e){return!0},e.onSelect=e._options.onSelect||function(e){var n=t.deer();return n.resolve(),n.promise},e.itemSelected=function(t){e.onSelect(t).then(function(){e._lastSelectedItem&&(e._lastSelectedItem._ngTree.selected=!1),t._ngTree.selected=!0,e._lastSelectedItem=t})},e.load=e._options.load||function(e){var n=t.defer();return n.resolve([]),n.promise},e.toggleFolding=function(t){if(!t._ngTree.folded)return void(t._ngTree.folded=!0);if("loaded"===t._ngTree.status)return void(t._ngTree.folded=!t._ngTree.folded);var n=e.options.lazy||!1;return t._options&&t._options.hasOwnProperty("lazy")&&(n=t._options.lazy),n?(t._ngTree.status="loading",void e.load(t).then(function(n){t.children=e._initItems(n),t._ngTree.status="loaded",t._ngTree.folded=!t._ngTree.folded})):void(t._ngTree.folded=!t._ngTree.folded)}}]},{"./templates":5}],4:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(n,"__esModule",{value:!0});var o=e("./templates"),r=i(o);n["default"]=function(){"ngInject";return{template:r["default"].tree,scope:{_options:"=ngTree"},controller:"NgTreeController",link:function(e,t,n){}}}},{"./templates":5}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){return'\n  <ul>\n    <li ng-repeat="item in tree track by $index" compiled="templates.item"></li>\n  </ul>\n'},o=function(){return'\n  <div class=\'ng-tree-item-content\' ng-class="{\'selected\': item._ngTree.selected}">\n    <span ng-show="item._ngTree.status !== \'loading\'">\n      <span ng-click="toggleFolding(item)" ng-show="item._ngTree.folded" compiled="options.indicators.folded"></span>\n      <span ng-click="toggleFolding(item)" ng-show="!item._ngTree.folded" compiled="options.indicators.unfolded"></span>\n    </span>\n\n    <span ng-show="item._ngTree.status === \'loading\'" compiled="options.indicators.loading"></span>\n\n    <a href="#" ng-click="itemSelected(item)">\n      {{item.name}} [id:{{item.id}}] [children:{{item.children.length}}] [lazy: {{item._options.lazy}}]\n    </a>\n  </div>\n\n  <ul ng-if="!item._ngTree.folded">\n    <li ng-repeat="item in item.children track by $index" compiled="templates.item"></li>\n  </ul>\n'};n["default"]={item:o(),tree:i()}},{}]},{},[2]);
//# sourceMappingURL=ng-tree.min.js.map
